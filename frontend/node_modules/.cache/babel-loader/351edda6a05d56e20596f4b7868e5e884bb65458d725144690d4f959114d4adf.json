{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSlotProps } from '@mui/base/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useThemeProps, useTheme } from '@mui/material/styles';\nimport { getSeriesToDisplay } from './utils';\nimport { getLegendUtilityClass } from './chartsLegendClasses';\nimport { DefaultChartsLegend } from './DefaultChartsLegend';\nimport { useDrawingArea } from '../hooks';\nimport { useSeries } from '../hooks/useSeries';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    direction\n  } = ownerState;\n  const slots = {\n    root: ['root', direction],\n    mark: ['mark'],\n    label: ['label'],\n    series: ['series']\n  };\n  return composeClasses(slots, getLegendUtilityClass, classes);\n};\nconst defaultProps = {\n  position: {\n    horizontal: 'middle',\n    vertical: 'top'\n  },\n  direction: 'row'\n};\nfunction ChartsLegend(inProps) {\n  var _slots$legend;\n  const props = useThemeProps({\n    props: _extends({}, defaultProps, inProps),\n    name: 'MuiChartsLegend'\n  });\n  const {\n    position,\n    direction,\n    hidden,\n    slots,\n    slotProps\n  } = props;\n  const theme = useTheme();\n  const classes = useUtilityClasses(_extends({}, props, {\n    theme\n  }));\n  const drawingArea = useDrawingArea();\n  const series = useSeries();\n  const seriesToDisplay = getSeriesToDisplay(series);\n  const ChartLegendRender = (_slots$legend = slots === null || slots === void 0 ? void 0 : slots.legend) !== null && _slots$legend !== void 0 ? _slots$legend : DefaultChartsLegend;\n  const chartLegendRenderProps = useSlotProps({\n    elementType: ChartLegendRender,\n    externalSlotProps: slotProps === null || slotProps === void 0 ? void 0 : slotProps.legend,\n    additionalProps: {\n      position,\n      direction,\n      classes,\n      drawingArea,\n      series,\n      hidden,\n      seriesToDisplay\n    },\n    ownerState: {}\n  });\n  return /*#__PURE__*/_jsx(ChartLegendRender, _extends({}, chartLegendRenderProps));\n}\nprocess.env.NODE_ENV !== \"production\" ? ChartsLegend.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The direction of the legend layout.\n   * The default depends on the chart.\n   */\n  direction: PropTypes.oneOf(['column', 'row']),\n  /**\n   * Set to true to hide the legend.\n   * @default false\n   */\n  hidden: PropTypes.bool,\n  /**\n   * The position of the legend.\n   */\n  position: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'middle', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'middle', 'top']).isRequired\n  }),\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { ChartsLegend };","map":{"version":3,"names":["_extends","React","PropTypes","useSlotProps","unstable_composeClasses","composeClasses","useThemeProps","useTheme","getSeriesToDisplay","getLegendUtilityClass","DefaultChartsLegend","useDrawingArea","useSeries","jsx","_jsx","useUtilityClasses","ownerState","classes","direction","slots","root","mark","label","series","defaultProps","position","horizontal","vertical","ChartsLegend","inProps","_slots$legend","props","name","hidden","slotProps","theme","drawingArea","seriesToDisplay","ChartLegendRender","legend","chartLegendRenderProps","elementType","externalSlotProps","additionalProps","process","env","NODE_ENV","propTypes","object","oneOf","bool","shape","isRequired"],"sources":["/Users/neilk/Documents/WebDev/workout-tracker/node_modules/@mui/x-charts/esm/ChartsLegend/ChartsLegend.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSlotProps } from '@mui/base/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useThemeProps, useTheme } from '@mui/material/styles';\nimport { getSeriesToDisplay } from './utils';\nimport { getLegendUtilityClass } from './chartsLegendClasses';\nimport { DefaultChartsLegend } from './DefaultChartsLegend';\nimport { useDrawingArea } from '../hooks';\nimport { useSeries } from '../hooks/useSeries';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    direction\n  } = ownerState;\n  const slots = {\n    root: ['root', direction],\n    mark: ['mark'],\n    label: ['label'],\n    series: ['series']\n  };\n  return composeClasses(slots, getLegendUtilityClass, classes);\n};\nconst defaultProps = {\n  position: {\n    horizontal: 'middle',\n    vertical: 'top'\n  },\n  direction: 'row'\n};\nfunction ChartsLegend(inProps) {\n  const props = useThemeProps({\n    props: _extends({}, defaultProps, inProps),\n    name: 'MuiChartsLegend'\n  });\n  const {\n    position,\n    direction,\n    hidden,\n    slots,\n    slotProps\n  } = props;\n  const theme = useTheme();\n  const classes = useUtilityClasses(_extends({}, props, {\n    theme\n  }));\n  const drawingArea = useDrawingArea();\n  const series = useSeries();\n  const seriesToDisplay = getSeriesToDisplay(series);\n  const ChartLegendRender = slots?.legend ?? DefaultChartsLegend;\n  const chartLegendRenderProps = useSlotProps({\n    elementType: ChartLegendRender,\n    externalSlotProps: slotProps?.legend,\n    additionalProps: {\n      position,\n      direction,\n      classes,\n      drawingArea,\n      series,\n      hidden,\n      seriesToDisplay\n    },\n    ownerState: {}\n  });\n  return /*#__PURE__*/_jsx(ChartLegendRender, _extends({}, chartLegendRenderProps));\n}\nprocess.env.NODE_ENV !== \"production\" ? ChartsLegend.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The direction of the legend layout.\n   * The default depends on the chart.\n   */\n  direction: PropTypes.oneOf(['column', 'row']),\n  /**\n   * Set to true to hide the legend.\n   * @default false\n   */\n  hidden: PropTypes.bool,\n  /**\n   * The position of the legend.\n   */\n  position: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'middle', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'middle', 'top']).isRequired\n  }),\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { ChartsLegend };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}