{"ast":null,"code":"var _jsxFileName = \"/Users/neilk/Documents/WebDev/workout-tracker/frontend/src/components/EditableTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Paper, TextField, Button, Box, Accordion, AccordionSummary, AccordionDetails, Typography, Dialog, DialogTitle, DialogContent, DialogActions, useMediaQuery, useTheme } from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport EditIcon from '@mui/icons-material/Edit';\nimport SaveIcon from '@mui/icons-material/Save';\nimport WorkoutLineChart from './WorkoutLineChart';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EditableTable = () => {\n  _s();\n  const [workouts, setWorkouts] = useState([]);\n  const [editData, setEditData] = useState({});\n  // eslint-disable-next-line\n  const [exercises, setExercises] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [newExercise, setNewExercise] = useState({\n    exercise: '',\n    Neil: '',\n    Ria: ''\n  });\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [selectedWorkout, setSelectedWorkout] = useState(null);\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n  // const API_BASE_URL = 'https://workout-tracker-hdq7.onrender.com';\n  const API_BASE_URL = 'http://localhost:3001';\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/workouts`);\n        const allExercises = getAllExercises(response.data);\n        const latestWorkouts = getLatestWorkouts(response.data, allExercises);\n        // setExercises(allExercises);\n        setWorkouts(latestWorkouts);\n        setEditData(formatEditData(latestWorkouts));\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const getAllExercises = data => {\n    const allExercises = data.map(d => d.workout);\n    const uniqueExercises = [...new Set(allExercises)];\n    return uniqueExercises;\n  };\n  const getLatestWorkouts = (data, exercises) => {\n    const users = ['Neil', 'Ria'];\n    const latestWorkouts = exercises.map(exercise => {\n      const workout = {\n        exercise\n      };\n      // console.log(\"workout:\", workout, data);\n      users.forEach(user => {\n        const userData = data.filter(d => d.workout === exercise && d.user === user);\n        // console.log(\"userData:\", userData)\n        userData.sort((a, b) => new Date(b.date_edited) - new Date(a.date_edited));\n        const latestEntry = userData.length > 0 ? userData[0] : {\n          weight: ''\n        };\n        const history = userData;\n        workout[user] = latestEntry.weight;\n        workout[`${user}History`] = history;\n      });\n      return workout;\n    });\n    return latestWorkouts;\n  };\n  const formatEditData = workouts => {\n    const editData = {};\n    workouts.forEach(workout => {\n      editData[workout.exercise] = {\n        Neil: workout.Neil,\n        Ria: workout.Ria\n      };\n    });\n    return editData;\n  };\n  const handleChange = (exercise, user, value) => {\n    setEditData(prevState => ({\n      ...prevState,\n      [exercise]: {\n        ...prevState[exercise],\n        [user]: value\n      }\n    }));\n  };\n  const handleSave = async () => {\n    try {\n      const updates = [];\n      for (const ind in workouts) {\n        let workout = workouts[ind];\n        let exercise = workout.exercise;\n        if (editData.hasOwnProperty(exercise)) {\n          const neilData = {\n            workout: exercise,\n            user: 'Neil',\n            date_edited: new Date().toISOString(),\n            weight: editData[exercise].Neil\n          };\n          const riaData = {\n            workout: exercise,\n            user: 'Ria',\n            date_edited: new Date().toISOString(),\n            weight: editData[exercise].Ria\n          };\n          if (editData[exercise].Neil !== workout.Neil) updates.push(neilData);\n          if (editData[exercise].Ria !== workout.Ria) updates.push(riaData);\n        }\n      }\n      if (updates.length > 0) {\n        await axios.post(`${API_BASE_URL}/workouts/update`, updates);\n      }\n      const response = await axios.get(`${API_BASE_URL}/workouts`);\n      const allExercises = getAllExercises(response.data);\n      const latestWorkouts = getLatestWorkouts(response.data, allExercises);\n      setExercises(allExercises);\n      setWorkouts(latestWorkouts);\n      setEditData(formatEditData(latestWorkouts));\n    } catch (error) {\n      console.error('Error saving workouts:', error);\n    }\n  };\n  const handleNewExerciseChange = (field, value) => {\n    setNewExercise(prevState => ({\n      ...prevState,\n      [field]: value\n    }));\n  };\n  const handleAddExercise = async () => {\n    console.log(\"adding new exercise...\");\n    if (newExercise.exercise === \"\") {\n      return;\n    }\n    try {\n      const newNeilData = {\n        workout: newExercise.exercise,\n        user: 'Neil',\n        date_edited: new Date().toISOString(),\n        weight: newExercise.Neil\n      };\n      const newRiaData = {\n        workout: newExercise.exercise,\n        user: 'Ria',\n        date_edited: new Date().toISOString(),\n        weight: newExercise.Ria\n      };\n      await axios.post(`${API_BASE_URL}/workouts`, newNeilData);\n      await axios.post(`${API_BASE_URL}/workouts`, newRiaData);\n      const response = await axios.get(`${API_BASE_URL}/workouts`);\n      const allExercises = getAllExercises(response.data);\n      const latestWorkouts = getLatestWorkouts(response.data, allExercises);\n      setExercises(allExercises);\n      setWorkouts(latestWorkouts);\n      setEditData(formatEditData(latestWorkouts));\n      setNewExercise({\n        exercise: '',\n        Neil: '',\n        Ria: ''\n      }); // Reset new exercise fields\n      setIsAddModalOpen(false); // Close the modal after adding\n    } catch (error) {\n      console.error('Error adding new exercise:', error);\n    }\n  };\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  const handleWorkoutSelect = exercise => {\n    const workoutData = workouts.find(workout => workout.exercise === exercise);\n    setSelectedWorkout(workoutData ? {\n      ...workoutData\n    } : null);\n  };\n  const openAddModal = () => {\n    setIsAddModalOpen(true);\n  };\n  const closeAddModal = () => {\n    setIsAddModalOpen(false);\n  };\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        width: '100%',\n        overflow: 'hidden',\n        p: isMobile ? 1 : 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(WorkoutLineChart, {\n        workoutData: selectedWorkout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        sx: {\n          maxHeight: 440,\n          width: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"sticky table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  fontSize: '1.25rem',\n                  fontWeight: 'bold'\n                },\n                children: \"Exercise \\uD83D\\uDCAA\\uD83C\\uDFFD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  fontSize: '1.25rem',\n                  fontWeight: 'bold'\n                },\n                children: \"Ria \\uD83C\\uDFCB\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  fontSize: '1.25rem',\n                  fontWeight: 'bold'\n                },\n                children: \"Neil \\uD83C\\uDFCB\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  fontSize: '1.25rem',\n                  fontWeight: 'bold'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: workouts.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(workout => {\n              var _editData$workout$exe, _editData$workout$exe2;\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                role: \"checkbox\",\n                tabIndex: -1,\n                onClick: () => handleWorkoutSelect(workout.exercise),\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  sx: {\n                    fontSize: '1rem',\n                    fontWeight: 'bold',\n                    width: \"150px\"\n                  },\n                  children: workout.exercise\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    value: ((_editData$workout$exe = editData[workout.exercise]) === null || _editData$workout$exe === void 0 ? void 0 : _editData$workout$exe.Ria) || '',\n                    onChange: e => handleChange(workout.exercise, 'Ria', e.target.value),\n                    sx: {\n                      width: \"150px\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    value: ((_editData$workout$exe2 = editData[workout.exercise]) === null || _editData$workout$exe2 === void 0 ? void 0 : _editData$workout$exe2.Neil) || '',\n                    onChange: e => handleChange(workout.exercise, 'Neil', e.target.value),\n                    sx: {\n                      width: \"150px\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Accordion, {\n                    children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n                      expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 235,\n                        columnNumber: 53\n                      }, this),\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        children: \"View Details\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 236,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 235,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        style: {\n                          marginTop: '10px'\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"Ria's Progress:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 240,\n                          columnNumber: 27\n                        }, this), workout.RiaHistory.slice(10).map((entry, index) => entry.weight !== \"\" && entry.weight !== \"0\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [new Date(entry.date_edited).toLocaleDateString(), \": \", entry.weight, \" lbs\"]\n                        }, index, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 242,\n                          columnNumber: 29\n                        }, this) : \"\")]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 239,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"Neil's Progress:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 248,\n                          columnNumber: 27\n                        }, this), workout.NeilHistory.slice(10).map((entry, index) => entry.weight !== \"\" && entry.weight !== \"0\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [new Date(entry.date_edited).toLocaleDateString(), \": \", entry.weight, \" lbs\"]\n                        }, index, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 250,\n                          columnNumber: 29\n                        }, this) : \"\")]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 247,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 238,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 19\n                }, this)]\n              }, workout.exercise, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [10, 25, 100],\n        component: \"div\",\n        count: workouts.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onPageChange: handleChangePage,\n        onRowsPerPageChange: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        textAlign: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: openAddModal,\n          startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 72\n          }, this),\n          sx: {\n            width: '50%'\n          },\n          children: \"Add Exercise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        p: 2,\n        textAlign: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"success\",\n          onClick: handleSave,\n          startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 87\n          }, this),\n          sx: {\n            width: '50%'\n          },\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isAddModalOpen,\n      onClose: closeAddModal,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Add New Exercise\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Exercise\",\n          value: newExercise.exercise,\n          onChange: e => handleNewExerciseChange('exercise', e.target.value),\n          margin: \"normal\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Ria\",\n          value: newExercise.Ria,\n          onChange: e => handleNewExerciseChange('Ria', e.target.value),\n          margin: \"normal\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Neil\",\n          value: newExercise.Neil,\n          onChange: e => handleNewExerciseChange('Neil', e.target.value),\n          margin: \"normal\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: closeAddModal,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAddExercise,\n          color: \"primary\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(EditableTable, \"QwRE0YmHsl5yNHh6fzxqTjospiY=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n_c = EditableTable;\nexport default EditableTable;\nvar _c;\n$RefreshReg$(_c, \"EditableTable\");","map":{"version":3,"names":["React","useState","useEffect","axios","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Paper","TextField","Button","Box","Accordion","AccordionSummary","AccordionDetails","Typography","Dialog","DialogTitle","DialogContent","DialogActions","useMediaQuery","useTheme","ExpandMoreIcon","EditIcon","SaveIcon","WorkoutLineChart","jsxDEV","_jsxDEV","Fragment","_Fragment","EditableTable","_s","workouts","setWorkouts","editData","setEditData","exercises","setExercises","loading","setLoading","newExercise","setNewExercise","exercise","Neil","Ria","page","setPage","rowsPerPage","setRowsPerPage","selectedWorkout","setSelectedWorkout","isAddModalOpen","setIsAddModalOpen","API_BASE_URL","fetchData","response","get","allExercises","getAllExercises","data","latestWorkouts","getLatestWorkouts","formatEditData","error","console","map","d","workout","uniqueExercises","Set","users","forEach","user","userData","filter","sort","a","b","Date","date_edited","latestEntry","length","weight","history","handleChange","value","prevState","handleSave","updates","ind","hasOwnProperty","neilData","toISOString","riaData","push","post","handleNewExerciseChange","field","handleAddExercise","log","newNeilData","newRiaData","handleChangePage","event","newPage","handleChangeRowsPerPage","target","handleWorkoutSelect","workoutData","find","openAddModal","closeAddModal","theme","isMobile","breakpoints","down","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","width","overflow","p","maxHeight","stickyHeader","fontSize","fontWeight","slice","_editData$workout$exe","_editData$workout$exe2","hover","role","tabIndex","onClick","onChange","e","expandIcon","variant","style","marginTop","RiaHistory","entry","index","toLocaleDateString","NeilHistory","rowsPerPageOptions","component","count","onPageChange","onRowsPerPageChange","mt","textAlign","startIcon","color","open","onClose","label","margin","fullWidth","_c","$RefreshReg$"],"sources":["/Users/neilk/Documents/WebDev/workout-tracker/frontend/src/components/EditableTable.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n  Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Paper,\n  TextField, Button, Box, Accordion, AccordionSummary, AccordionDetails, Typography,\n  Dialog, DialogTitle, DialogContent, DialogActions, useMediaQuery, useTheme\n} from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport EditIcon from '@mui/icons-material/Edit';\nimport SaveIcon from '@mui/icons-material/Save';\nimport WorkoutLineChart from './WorkoutLineChart';\n\nconst EditableTable = () => {\n  const [workouts, setWorkouts] = useState([]);\n  const [editData, setEditData] = useState({});\n  // eslint-disable-next-line\n  const [exercises, setExercises] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [newExercise, setNewExercise] = useState({ exercise: '', Neil: '', Ria: '' });\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [selectedWorkout, setSelectedWorkout] = useState(null);\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n  // const API_BASE_URL = 'https://workout-tracker-hdq7.onrender.com';\n  const API_BASE_URL = 'http://localhost:3001';\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/workouts`);\n        const allExercises = getAllExercises(response.data);\n        const latestWorkouts = getLatestWorkouts(response.data, allExercises);\n        // setExercises(allExercises);\n        setWorkouts(latestWorkouts);\n        setEditData(formatEditData(latestWorkouts));\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const getAllExercises = (data) => {\n    const allExercises = data.map(d => d.workout);\n    const uniqueExercises = [...new Set(allExercises)];\n    return uniqueExercises;\n  };\n\n  const getLatestWorkouts = (data, exercises) => {\n    const users = ['Neil', 'Ria'];\n    const latestWorkouts = exercises.map(exercise => {\n      const workout = { exercise };\n      // console.log(\"workout:\", workout, data);\n      users.forEach(user => {\n        const userData = data.filter(d => d.workout === exercise && d.user === user);\n        // console.log(\"userData:\", userData)\n        userData.sort((a, b) => new Date(b.date_edited) - new Date(a.date_edited));\n  \n        const latestEntry = userData.length > 0 ? userData[0] : { weight: '' };\n        const history = userData;\n  \n        workout[user] = latestEntry.weight;\n        workout[`${user}History`] = history;\n      });\n      return workout;\n    });\n    return latestWorkouts;\n  };\n  \n  const formatEditData = (workouts) => {\n    const editData = {};\n    workouts.forEach(workout => {\n      editData[workout.exercise] = {\n        Neil: workout.Neil,\n        Ria: workout.Ria\n      };\n    });\n    return editData;\n  };\n\n  const handleChange = (exercise, user, value) => {\n    setEditData(prevState => ({\n      ...prevState,\n      [exercise]: {\n        ...prevState[exercise],\n        [user]: value\n      }\n    }));\n  };\n\n  const handleSave = async () => {\n    try {\n      const updates = [];\n      for (const ind in workouts) {\n        let workout = workouts[ind];\n        let exercise = workout.exercise;\n        if (editData.hasOwnProperty(exercise)) {\n          const neilData = {\n            workout: exercise,\n            user: 'Neil',\n            date_edited: new Date().toISOString(),\n            weight: editData[exercise].Neil\n          };\n          const riaData = {\n            workout: exercise,\n            user: 'Ria',\n            date_edited: new Date().toISOString(),\n            weight: editData[exercise].Ria\n          };\n          if (editData[exercise].Neil !== workout.Neil)\n            updates.push(neilData);\n          if (editData[exercise].Ria !== workout.Ria)\n            updates.push(riaData);\n        }\n      }\n      if (updates.length > 0) {\n        await axios.post(`${API_BASE_URL}/workouts/update`, updates);\n      }\n      const response = await axios.get(`${API_BASE_URL}/workouts`);\n      const allExercises = getAllExercises(response.data);\n      const latestWorkouts = getLatestWorkouts(response.data, allExercises);\n      setExercises(allExercises);\n      setWorkouts(latestWorkouts);\n      setEditData(formatEditData(latestWorkouts));\n    } catch (error) {\n      console.error('Error saving workouts:', error);\n    }\n  };\n  \n  const handleNewExerciseChange = (field, value) => {\n    setNewExercise(prevState => ({\n      ...prevState,\n      [field]: value\n    }));\n  };\n\n  const handleAddExercise = async () => {\n    console.log(\"adding new exercise...\");\n    if (newExercise.exercise === \"\") {\n      return;\n    }\n    try {\n      const newNeilData = {\n        workout: newExercise.exercise,\n        user: 'Neil',\n        date_edited: new Date().toISOString(),\n        weight: newExercise.Neil\n      };\n      const newRiaData = {\n        workout: newExercise.exercise,\n        user: 'Ria',\n        date_edited: new Date().toISOString(),\n        weight: newExercise.Ria\n      };\n      await axios.post(`${API_BASE_URL}/workouts`, newNeilData);\n      await axios.post(`${API_BASE_URL}/workouts`, newRiaData);\n      const response = await axios.get(`${API_BASE_URL}/workouts`);\n      const allExercises = getAllExercises(response.data);\n      const latestWorkouts = getLatestWorkouts(response.data, allExercises);\n      setExercises(allExercises);\n      setWorkouts(latestWorkouts);\n      setEditData(formatEditData(latestWorkouts));\n      setNewExercise({ exercise: '', Neil: '', Ria: '' });  // Reset new exercise fields\n      setIsAddModalOpen(false); // Close the modal after adding\n    } catch (error) {\n      console.error('Error adding new exercise:', error);\n    }\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const handleWorkoutSelect = (exercise) => {\n    const workoutData = workouts.find(workout => workout.exercise === exercise);\n    setSelectedWorkout(workoutData ? { ...workoutData } : null);\n  };\n\n  const openAddModal = () => {\n    setIsAddModalOpen(true);\n  };\n\n  const closeAddModal = () => {\n    setIsAddModalOpen(false);\n  };\n\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      <Paper sx={{ width: '100%', overflow: 'hidden', p: isMobile ? 1 : 2 }}>\n        {<WorkoutLineChart workoutData={selectedWorkout} />}\n        <TableContainer sx={{ maxHeight: 440, width: '100%' }}>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                <TableCell sx={{ fontSize: '1.25rem', fontWeight: 'bold' }}>Exercise 💪🏽</TableCell>\n                <TableCell sx={{ fontSize: '1.25rem', fontWeight: 'bold' }}>Ria 🏋🏽‍♀️</TableCell>\n                <TableCell sx={{ fontSize: '1.25rem', fontWeight: 'bold' }}>Neil 🏋🏽‍♂️</TableCell>\n                <TableCell sx={{ fontSize: '1.25rem', fontWeight: 'bold' }}></TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {workouts.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((workout) => (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={workout.exercise} onClick={() => handleWorkoutSelect(workout.exercise)}>\n                  <TableCell sx={{ fontSize: '1rem', fontWeight: 'bold', width: \"150px\" }}>{workout.exercise}</TableCell>\n                  <TableCell>\n                    <TextField\n                      value={editData[workout.exercise]?.Ria || ''}\n                      onChange={(e) => handleChange(workout.exercise, 'Ria', e.target.value)}\n                      sx={{ width: \"150px\" }}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <TextField\n                      value={editData[workout.exercise]?.Neil || ''}\n                      onChange={(e) => handleChange(workout.exercise, 'Neil', e.target.value)}\n                      sx={{ width: \"150px\" }}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Accordion>\n                      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                        <Typography>View Details</Typography>\n                      </AccordionSummary>\n                      <AccordionDetails>\n                        <Typography variant=\"body2\" style={{ marginTop: '10px' }}>\n                          <strong>Ria's Progress:</strong>\n                          {workout.RiaHistory.slice(10).map((entry, index) => (entry.weight !== \"\" && entry.weight !== \"0\") ? (\n                            <div key={index}>\n                              {new Date(entry.date_edited).toLocaleDateString()}: {entry.weight} lbs\n                            </div>\n                          ) : \"\")}\n                        </Typography>\n                        <Typography variant=\"body2\">\n                          <strong>Neil's Progress:</strong>\n                          {workout.NeilHistory.slice(10).map((entry, index) => (entry.weight !== \"\" && entry.weight !== \"0\") ? (\n                            <div key={index}>\n                              {new Date(entry.date_edited).toLocaleDateString()}: {entry.weight} lbs\n                            </div>\n                          ) : \"\")}\n                        </Typography>\n                      </AccordionDetails>\n                    </Accordion>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 100]}\n          component=\"div\"\n          count={workouts.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n        <Box mt={2} textAlign=\"center\">\n          <Button variant=\"outlined\" onClick={openAddModal} startIcon={<EditIcon />} sx={{ width: '50%' }}>\n            Add Exercise\n          </Button>\n        </Box>\n        <Box p={2} textAlign=\"center\">\n          <Button variant=\"contained\" color=\"success\" onClick={handleSave} startIcon={<SaveIcon />} sx={{ width: '50%' }}>\n            Save Changes\n          </Button>\n        </Box>\n      </Paper>\n\n      <Dialog open={isAddModalOpen} onClose={closeAddModal}>\n        <DialogTitle>Add New Exercise</DialogTitle>\n        <DialogContent>\n          <TextField\n            label=\"Exercise\"\n            value={newExercise.exercise}\n            onChange={(e) => handleNewExerciseChange('exercise', e.target.value)}\n            margin=\"normal\"\n            fullWidth\n          />\n          <TextField\n            label=\"Ria\"\n            value={newExercise.Ria}\n            onChange={(e) => handleNewExerciseChange('Ria', e.target.value)}\n            margin=\"normal\"\n            fullWidth\n          />\n          <TextField\n            label=\"Neil\"\n            value={newExercise.Neil}\n            onChange={(e) => handleNewExerciseChange('Neil', e.target.value)}\n            margin=\"normal\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeAddModal} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleAddExercise} color=\"primary\">\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default EditableTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}