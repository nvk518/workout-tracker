{"ast":null,"code":"import React from'react';import{LineChart}from'@mui/x-charts/LineChart';import{Box,useMediaQuery,useTheme,Stack,Typography}from'@mui/material';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const WorkoutLineChart=_ref=>{let{workoutData}=_ref;const theme=useTheme();const isMobile=useMediaQuery(theme.breakpoints.down('sm'));// eslint-disable-next-line\nconst connectNulls=true;if(!workoutData||!workoutData.NeilHistory||!workoutData.RiaHistory){return/*#__PURE__*/_jsx(Box,{children:\"Click on an exercise to view data\"});}let neilData=[];let riaData=[];let neilSeriesData=[];let riaSeriesData=[];let xLabels=[];const processHistory=history=>{const dateMap={};history.forEach(d=>{const date=new Date(d.date_edited).toISOString().split('T')[0];// Ensure consistent date format\nif(!dateMap[date]||d.weight>dateMap[date]){dateMap[date]=d.weight;}});return Object.keys(dateMap).sort((a,b)=>new Date(a)-new Date(b))// Sort dates in ascending order\n.map(date=>({x:date,y:dateMap[date]}));};try{neilData=processHistory(workoutData.NeilHistory);riaData=processHistory(workoutData.RiaHistory);const allDates=[...new Set([...neilData.map(d=>d.x),...riaData.map(d=>d.x)])].sort((a,b)=>new Date(a)-new Date(b));xLabels=allDates;// Create series data with null for missing dates\nconst createSeriesData=(data,dates)=>{const dataMap=new Map(data.map(d=>[d.x,d.y]));return dates.map(date=>dataMap.get(date)||null);};neilSeriesData=createSeriesData(neilData,xLabels);riaSeriesData=createSeriesData(riaData,xLabels);console.log(\"Neil Data:\",neilSeriesData);console.log(\"Ria Data:\",riaSeriesData);console.log(\"workout:\",workoutData);}catch(error){console.log(error);return/*#__PURE__*/_jsx(Box,{children:\"Click on an exercise to view data\"});}return/*#__PURE__*/_jsxs(Stack,{direction:{xs:'column',md:'row'},spacing:{xs:4,md:8},sx:{width:'100%',mx:'auto',my:2},textAlign:\"center\",children:[/*#__PURE__*/_jsx(Box,{minWidth:100,children:/*#__PURE__*/_jsx(Typography,{fontSize:20,fontWeight:700,children:workoutData.exercise})}),/*#__PURE__*/_jsx(Box,{textAlign:\"center\",sx:{width:'100%',my:2},children:/*#__PURE__*/_jsx(LineChart,{width:isMobile?300:500,height:isMobile?200:300,series:[{data:neilSeriesData,label:'Neil',connectNulls,valueFormatter:value=>value==null?'NaN':value.toString()},{data:riaSeriesData,label:'Ria',connectNulls,valueFormatter:value=>value==null?'NaN':value.toString()}],xAxis:[{scaleType:'point',data:xLabels}]})})]});};export default WorkoutLineChart;","map":{"version":3,"names":["React","LineChart","Box","useMediaQuery","useTheme","Stack","Typography","jsx","_jsx","jsxs","_jsxs","WorkoutLineChart","_ref","workoutData","theme","isMobile","breakpoints","down","connectNulls","NeilHistory","RiaHistory","children","neilData","riaData","neilSeriesData","riaSeriesData","xLabels","processHistory","history","dateMap","forEach","d","date","Date","date_edited","toISOString","split","weight","Object","keys","sort","a","b","map","x","y","allDates","Set","createSeriesData","data","dates","dataMap","Map","get","console","log","error","direction","xs","md","spacing","sx","width","mx","my","textAlign","minWidth","fontSize","fontWeight","exercise","height","series","label","valueFormatter","value","toString","xAxis","scaleType"],"sources":["/Users/neilk/Documents/WebDev/workout-tracker/frontend/src/components/WorkoutLineChart.js"],"sourcesContent":["import React from 'react';\nimport { LineChart } from '@mui/x-charts/LineChart';\nimport { Box, useMediaQuery, useTheme, Stack, Typography } from '@mui/material';\n\nconst WorkoutLineChart = ({ workoutData }) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  // eslint-disable-next-line\n  const connectNulls = true;\n\n  if (!workoutData || !workoutData.NeilHistory || !workoutData.RiaHistory) {\n    return <Box>Click on an exercise to view data</Box>;\n  }\n\n  let neilData = [];\n  let riaData = [];\n  let neilSeriesData = [];\n  let riaSeriesData = [];\n  let xLabels = [];\n\n  const processHistory = (history) => {\n    const dateMap = {};\n    history.forEach(d => {\n      const date = new Date(d.date_edited).toISOString().split('T')[0]; // Ensure consistent date format\n      if (!dateMap[date] || d.weight > dateMap[date]) {\n        dateMap[date] = d.weight;\n      }\n    });\n\n    return Object.keys(dateMap)\n      .sort((a, b) => new Date(a) - new Date(b)) // Sort dates in ascending order\n      .map(date => ({ x: date, y: dateMap[date] }));\n  };\n\n  try {\n    neilData = processHistory(workoutData.NeilHistory);\n    riaData = processHistory(workoutData.RiaHistory);\n\n    const allDates = [\n      ...new Set([\n        ...neilData.map(d => d.x),\n        ...riaData.map(d => d.x)\n      ])\n    ].sort((a, b) => new Date(a) - new Date(b));\n\n    xLabels = allDates;\n\n    // Create series data with null for missing dates\n    const createSeriesData = (data, dates) => {\n      const dataMap = new Map(data.map(d => [d.x, d.y]));\n      return dates.map(date => dataMap.get(date) || null);\n    };\n\n    neilSeriesData = createSeriesData(neilData, xLabels);\n    riaSeriesData = createSeriesData(riaData, xLabels);\n\n    console.log(\"Neil Data:\", neilSeriesData);\n    console.log(\"Ria Data:\", riaSeriesData);\n    console.log(\"workout:\", workoutData);\n  } catch (error) {\n    console.log(error);\n    return <Box>Click on an exercise to view data</Box>;\n  }\n\n  return (\n    <Stack\n      direction={{ xs: 'column', md: 'row' }}\n      spacing={{ xs: 4, md: 8 }}\n      sx={{ width: '100%', mx: 'auto', my: 2 }}\n      textAlign=\"center\"\n    >\n      <Box minWidth={100}>\n        <Typography fontSize={20} fontWeight={700}>{workoutData.exercise}</Typography>\n      </Box>\n      <Box textAlign=\"center\" sx={{ width: '100%', my: 2 }}>\n        <LineChart\n          width={isMobile ? 300 : 500}\n          height={isMobile ? 200 : 300}\n          series={[\n            { data: neilSeriesData, label: 'Neil', connectNulls, valueFormatter: (value) => (value == null ? 'NaN' : value.toString()) },\n            { data: riaSeriesData, label: 'Ria', connectNulls, valueFormatter: (value) => (value == null ? 'NaN' : value.toString()) },\n          ]}\n          xAxis={[{ scaleType: 'point', data: xLabels }]}\n        />\n      </Box>\n    </Stack>\n  );\n};\n\nexport default WorkoutLineChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}