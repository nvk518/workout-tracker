{"ast":null,"code":"import { scaleOrdinal, scaleThreshold, scaleSequential } from 'd3-scale';\nexport function getSequentialColorScale(config) {\n  var _config$min, _config$max;\n  if (config.type === 'piecewise') {\n    return scaleThreshold(config.thresholds, config.colors);\n  }\n  return scaleSequential([(_config$min = config.min) !== null && _config$min !== void 0 ? _config$min : 0, (_config$max = config.max) !== null && _config$max !== void 0 ? _config$max : 100], config.color);\n}\nexport function getOrdinalColorScale(config) {\n  var _config$unknownColor2;\n  if (config.values) {\n    var _config$unknownColor;\n    return scaleOrdinal(config.values, config.colors).unknown((_config$unknownColor = config.unknownColor) !== null && _config$unknownColor !== void 0 ? _config$unknownColor : null);\n  }\n  return scaleOrdinal(config.colors.map((_, index) => index), config.colors).unknown((_config$unknownColor2 = config.unknownColor) !== null && _config$unknownColor2 !== void 0 ? _config$unknownColor2 : null);\n}\nexport function getColorScale(config) {\n  return config.type === 'ordinal' ? getOrdinalColorScale(config) : getSequentialColorScale(config);\n}","map":{"version":3,"names":["scaleOrdinal","scaleThreshold","scaleSequential","getSequentialColorScale","config","_config$min","_config$max","type","thresholds","colors","min","max","color","getOrdinalColorScale","_config$unknownColor2","values","_config$unknownColor","unknown","unknownColor","map","_","index","getColorScale"],"sources":["/Users/neilk/Documents/WebDev/workout-tracker/node_modules/@mui/x-charts/esm/internals/colorScale.js"],"sourcesContent":["import { scaleOrdinal, scaleThreshold, scaleSequential } from 'd3-scale';\nexport function getSequentialColorScale(config) {\n  if (config.type === 'piecewise') {\n    return scaleThreshold(config.thresholds, config.colors);\n  }\n  return scaleSequential([config.min ?? 0, config.max ?? 100], config.color);\n}\nexport function getOrdinalColorScale(config) {\n  if (config.values) {\n    return scaleOrdinal(config.values, config.colors).unknown(config.unknownColor ?? null);\n  }\n  return scaleOrdinal(config.colors.map((_, index) => index), config.colors).unknown(config.unknownColor ?? null);\n}\nexport function getColorScale(config) {\n  return config.type === 'ordinal' ? getOrdinalColorScale(config) : getSequentialColorScale(config);\n}"],"mappings":"AAAA,SAASA,YAAY,EAAEC,cAAc,EAAEC,eAAe,QAAQ,UAAU;AACxE,OAAO,SAASC,uBAAuBA,CAACC,MAAM,EAAE;EAAA,IAAAC,WAAA,EAAAC,WAAA;EAC9C,IAAIF,MAAM,CAACG,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAON,cAAc,CAACG,MAAM,CAACI,UAAU,EAAEJ,MAAM,CAACK,MAAM,CAAC;EACzD;EACA,OAAOP,eAAe,CAAC,EAAAG,WAAA,GAACD,MAAM,CAACM,GAAG,cAAAL,WAAA,cAAAA,WAAA,GAAI,CAAC,GAAAC,WAAA,GAAEF,MAAM,CAACO,GAAG,cAAAL,WAAA,cAAAA,WAAA,GAAI,GAAG,CAAC,EAAEF,MAAM,CAACQ,KAAK,CAAC;AAC5E;AACA,OAAO,SAASC,oBAAoBA,CAACT,MAAM,EAAE;EAAA,IAAAU,qBAAA;EAC3C,IAAIV,MAAM,CAACW,MAAM,EAAE;IAAA,IAAAC,oBAAA;IACjB,OAAOhB,YAAY,CAACI,MAAM,CAACW,MAAM,EAAEX,MAAM,CAACK,MAAM,CAAC,CAACQ,OAAO,EAAAD,oBAAA,GAACZ,MAAM,CAACc,YAAY,cAAAF,oBAAA,cAAAA,oBAAA,GAAI,IAAI,CAAC;EACxF;EACA,OAAOhB,YAAY,CAACI,MAAM,CAACK,MAAM,CAACU,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAKA,KAAK,CAAC,EAAEjB,MAAM,CAACK,MAAM,CAAC,CAACQ,OAAO,EAAAH,qBAAA,GAACV,MAAM,CAACc,YAAY,cAAAJ,qBAAA,cAAAA,qBAAA,GAAI,IAAI,CAAC;AACjH;AACA,OAAO,SAASQ,aAAaA,CAAClB,MAAM,EAAE;EACpC,OAAOA,MAAM,CAACG,IAAI,KAAK,SAAS,GAAGM,oBAAoB,CAACT,MAAM,CAAC,GAAGD,uBAAuB,CAACC,MAAM,CAAC;AACnG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}