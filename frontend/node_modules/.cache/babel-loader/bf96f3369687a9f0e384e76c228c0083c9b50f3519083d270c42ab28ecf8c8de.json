{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"slots\", \"slotProps\", \"skipAnimation\", \"onItemClick\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { line as d3Line } from 'd3-shape';\nimport { useCartesianContext } from '../context/CartesianProvider';\nimport { LineElement } from './LineElement';\nimport { getValueToPositionMapper } from '../hooks/useScale';\nimport getCurveFactory from '../internals/getCurve';\nimport { DEFAULT_X_AXIS_KEY } from '../constants';\nimport { useChartGradient } from '../internals/components/ChartsAxesGradients';\nimport { useLineSeries } from '../hooks/useSeries';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useAggregatedData = () => {\n  const seriesData = useLineSeries();\n  const axisData = useCartesianContext();\n  if (seriesData === undefined) {\n    return [];\n  }\n  const {\n    series,\n    stackingGroups\n  } = seriesData;\n  const {\n    xAxis,\n    yAxis,\n    xAxisIds,\n    yAxisIds\n  } = axisData;\n  const defaultXAxisId = xAxisIds[0];\n  const defaultYAxisId = yAxisIds[0];\n  return stackingGroups.flatMap(_ref => {\n    let {\n      ids: groupIds\n    } = _ref;\n    return groupIds.flatMap(seriesId => {\n      var _xData$map;\n      const {\n        xAxisKey = defaultXAxisId,\n        yAxisKey = defaultYAxisId,\n        stackedData,\n        data,\n        connectNulls\n      } = series[seriesId];\n      const xScale = getValueToPositionMapper(xAxis[xAxisKey].scale);\n      const yScale = yAxis[yAxisKey].scale;\n      const xData = xAxis[xAxisKey].data;\n      const gradientUsed = yAxis[yAxisKey].colorScale && [yAxisKey, 'y'] || xAxis[xAxisKey].colorScale && [xAxisKey, 'x'] || undefined;\n      if (process.env.NODE_ENV !== 'production') {\n        if (xData === undefined) {\n          throw new Error(\"MUI X Charts: \".concat(xAxisKey === DEFAULT_X_AXIS_KEY ? 'The first `xAxis`' : \"The x-axis with id \\\"\".concat(xAxisKey, \"\\\"\"), \" should have data property to be able to display a line plot.\"));\n        }\n        if (xData.length < stackedData.length) {\n          throw new Error(\"MUI X Charts: The data length of the x axis (\".concat(xData.length, \" items) is lower than the length of series (\").concat(stackedData.length, \" items).\"));\n        }\n      }\n      const linePath = d3Line().x(d => xScale(d.x)).defined((_, i) => connectNulls || data[i] != null).y(d => yScale(d.y[1]));\n      const formattedData = (_xData$map = xData === null || xData === void 0 ? void 0 : xData.map((x, index) => ({\n        x,\n        y: stackedData[index]\n      }))) !== null && _xData$map !== void 0 ? _xData$map : [];\n      const d3Data = connectNulls ? formattedData.filter((_, i) => data[i] != null) : formattedData;\n      const d = linePath.curve(getCurveFactory(series[seriesId].curve))(d3Data) || '';\n      return _extends({}, series[seriesId], {\n        gradientUsed,\n        d,\n        seriesId\n      });\n    });\n  });\n};\n\n/**\n * Demos:\n *\n * - [Lines](https://mui.com/x/react-charts/lines/)\n * - [Line demonstration](https://mui.com/x/react-charts/line-demo/)\n *\n * API:\n *\n * - [LinePlot API](https://mui.com/x/api/charts/line-plot/)\n */\nfunction LinePlot(props) {\n  const {\n      slots,\n      slotProps,\n      skipAnimation,\n      onItemClick\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const getGradientId = useChartGradient();\n  const completedData = useAggregatedData();\n  return /*#__PURE__*/_jsx(\"g\", _extends({}, other, {\n    children: completedData.map(_ref2 => {\n      let {\n        d,\n        seriesId,\n        color,\n        gradientUsed\n      } = _ref2;\n      return /*#__PURE__*/_jsx(LineElement, {\n        id: seriesId,\n        d: d,\n        color: color,\n        gradientId: gradientUsed && getGradientId(...gradientUsed),\n        skipAnimation: skipAnimation,\n        slots: slots,\n        slotProps: slotProps,\n        onClick: onItemClick && (event => onItemClick(event, {\n          type: 'line',\n          seriesId\n        }))\n      }, seriesId);\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? LinePlot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Callback fired when a line item is clicked.\n   * @param {React.MouseEvent<SVGPathElement, MouseEvent>} event The event source of the callback.\n   * @param {LineItemIdentifier} lineItemIdentifier The line item identifier.\n   */\n  onItemClick: PropTypes.func,\n  /**\n   * If `true`, animations are skipped.\n   * @default false\n   */\n  skipAnimation: PropTypes.bool,\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { LinePlot };","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","line","d3Line","useCartesianContext","LineElement","getValueToPositionMapper","getCurveFactory","DEFAULT_X_AXIS_KEY","useChartGradient","useLineSeries","jsx","_jsx","useAggregatedData","seriesData","axisData","undefined","series","stackingGroups","xAxis","yAxis","xAxisIds","yAxisIds","defaultXAxisId","defaultYAxisId","flatMap","_ref","ids","groupIds","seriesId","_xData$map","xAxisKey","yAxisKey","stackedData","data","connectNulls","xScale","scale","yScale","xData","gradientUsed","colorScale","process","env","NODE_ENV","Error","concat","length","linePath","x","d","defined","_","i","y","formattedData","map","index","d3Data","filter","curve","LinePlot","props","slots","slotProps","skipAnimation","onItemClick","other","getGradientId","completedData","children","_ref2","color","id","gradientId","onClick","event","type","propTypes","func","bool","object"],"sources":["/Users/neilk/Documents/WebDev/workout-tracker/node_modules/@mui/x-charts/esm/LineChart/LinePlot.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"slots\", \"slotProps\", \"skipAnimation\", \"onItemClick\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { line as d3Line } from 'd3-shape';\nimport { useCartesianContext } from '../context/CartesianProvider';\nimport { LineElement } from './LineElement';\nimport { getValueToPositionMapper } from '../hooks/useScale';\nimport getCurveFactory from '../internals/getCurve';\nimport { DEFAULT_X_AXIS_KEY } from '../constants';\nimport { useChartGradient } from '../internals/components/ChartsAxesGradients';\nimport { useLineSeries } from '../hooks/useSeries';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useAggregatedData = () => {\n  const seriesData = useLineSeries();\n  const axisData = useCartesianContext();\n  if (seriesData === undefined) {\n    return [];\n  }\n  const {\n    series,\n    stackingGroups\n  } = seriesData;\n  const {\n    xAxis,\n    yAxis,\n    xAxisIds,\n    yAxisIds\n  } = axisData;\n  const defaultXAxisId = xAxisIds[0];\n  const defaultYAxisId = yAxisIds[0];\n  return stackingGroups.flatMap(({\n    ids: groupIds\n  }) => {\n    return groupIds.flatMap(seriesId => {\n      const {\n        xAxisKey = defaultXAxisId,\n        yAxisKey = defaultYAxisId,\n        stackedData,\n        data,\n        connectNulls\n      } = series[seriesId];\n      const xScale = getValueToPositionMapper(xAxis[xAxisKey].scale);\n      const yScale = yAxis[yAxisKey].scale;\n      const xData = xAxis[xAxisKey].data;\n      const gradientUsed = yAxis[yAxisKey].colorScale && [yAxisKey, 'y'] || xAxis[xAxisKey].colorScale && [xAxisKey, 'x'] || undefined;\n      if (process.env.NODE_ENV !== 'production') {\n        if (xData === undefined) {\n          throw new Error(`MUI X Charts: ${xAxisKey === DEFAULT_X_AXIS_KEY ? 'The first `xAxis`' : `The x-axis with id \"${xAxisKey}\"`} should have data property to be able to display a line plot.`);\n        }\n        if (xData.length < stackedData.length) {\n          throw new Error(`MUI X Charts: The data length of the x axis (${xData.length} items) is lower than the length of series (${stackedData.length} items).`);\n        }\n      }\n      const linePath = d3Line().x(d => xScale(d.x)).defined((_, i) => connectNulls || data[i] != null).y(d => yScale(d.y[1]));\n      const formattedData = xData?.map((x, index) => ({\n        x,\n        y: stackedData[index]\n      })) ?? [];\n      const d3Data = connectNulls ? formattedData.filter((_, i) => data[i] != null) : formattedData;\n      const d = linePath.curve(getCurveFactory(series[seriesId].curve))(d3Data) || '';\n      return _extends({}, series[seriesId], {\n        gradientUsed,\n        d,\n        seriesId\n      });\n    });\n  });\n};\n\n/**\n * Demos:\n *\n * - [Lines](https://mui.com/x/react-charts/lines/)\n * - [Line demonstration](https://mui.com/x/react-charts/line-demo/)\n *\n * API:\n *\n * - [LinePlot API](https://mui.com/x/api/charts/line-plot/)\n */\nfunction LinePlot(props) {\n  const {\n      slots,\n      slotProps,\n      skipAnimation,\n      onItemClick\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const getGradientId = useChartGradient();\n  const completedData = useAggregatedData();\n  return /*#__PURE__*/_jsx(\"g\", _extends({}, other, {\n    children: completedData.map(({\n      d,\n      seriesId,\n      color,\n      gradientUsed\n    }) => {\n      return /*#__PURE__*/_jsx(LineElement, {\n        id: seriesId,\n        d: d,\n        color: color,\n        gradientId: gradientUsed && getGradientId(...gradientUsed),\n        skipAnimation: skipAnimation,\n        slots: slots,\n        slotProps: slotProps,\n        onClick: onItemClick && (event => onItemClick(event, {\n          type: 'line',\n          seriesId\n        }))\n      }, seriesId);\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? LinePlot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Callback fired when a line item is clicked.\n   * @param {React.MouseEvent<SVGPathElement, MouseEvent>} event The event source of the callback.\n   * @param {LineItemIdentifier} lineItemIdentifier The line item identifier.\n   */\n  onItemClick: PropTypes.func,\n  /**\n   * If `true`, animations are skipped.\n   * @default false\n   */\n  skipAnimation: PropTypes.bool,\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { LinePlot };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}