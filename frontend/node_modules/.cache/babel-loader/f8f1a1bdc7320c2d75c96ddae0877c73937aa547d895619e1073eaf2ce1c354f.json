{"ast":null,"code":"var _jsxFileName = \"/Users/neilk/Documents/WebDev/workout-tracker/frontend/src/components/WorkoutLineChart.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { LineChart } from '@mui/x-charts/LineChart';\nimport { Box, useMediaQuery, useTheme, Stack, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorkoutLineChart = ({\n  workoutData\n}) => {\n  _s();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  // eslint-disable-next-line\n  const connectNulls = true;\n  if (!workoutData || !workoutData.NeilHistory || !workoutData.RiaHistory) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: \"Click on an exercise to view data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n  let neilData = [];\n  let riaData = [];\n  let neilSeriesData = [];\n  let riaSeriesData = [];\n  let xLabels = [];\n  const processHistory = history => {\n    const dateMap = {};\n    history.forEach(d => {\n      const date = new Date(d.date_edited).toISOString().split('T')[0]; // Ensure consistent date format\n      if (!dateMap[date] & d.weight > dateMap[date]) {\n        dateMap[date] = d.weight;\n      }\n      console.log(dateMap);\n    });\n    return Object.keys(dateMap).sort((a, b) => new Date(a) - new Date(b)) // Sort dates in ascending order\n    .map(date => ({\n      x: date,\n      y: dateMap[date]\n    }));\n  };\n  try {\n    neilData = processHistory(workoutData.NeilHistory);\n    riaData = processHistory(workoutData.RiaHistory);\n    const allDates = [...new Set([...neilData.map(d => d.x), ...riaData.map(d => d.x)])].sort((a, b) => new Date(a) - new Date(b));\n    xLabels = allDates;\n\n    // Create series data with null for missing dates\n    const createSeriesData = (data, dates) => {\n      const dataMap = new Map(data.map(d => [d.x, d.y]));\n      return dates.map(date => dataMap.get(date) || null);\n    };\n    neilSeriesData = createSeriesData(neilData, xLabels);\n    riaSeriesData = createSeriesData(riaData, xLabels);\n\n    // console.log(\"Neil Data:\", neilSeriesData);\n    // console.log(\"Ria Data:\", riaSeriesData);\n    // console.log(\"workout:\", workoutData);\n  } catch (error) {\n    console.log(error);\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: \"Click on an exercise to view data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    direction: {\n      xs: 'column',\n      md: 'row'\n    },\n    spacing: {\n      xs: 4,\n      md: 8\n    },\n    sx: {\n      width: '100%',\n      mx: 'auto',\n      my: 2\n    },\n    textAlign: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      minWidth: 100,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        fontSize: 20,\n        fontWeight: 700,\n        children: workoutData.exercise\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      textAlign: \"center\",\n      sx: {\n        width: '100%',\n        my: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        width: isMobile ? 300 : 500,\n        height: isMobile ? 200 : 300,\n        series: [{\n          data: neilSeriesData,\n          label: 'Neil',\n          connectNulls,\n          valueFormatter: value => value == null ? 'NaN' : value.toString()\n        }, {\n          data: riaSeriesData,\n          label: 'Ria',\n          connectNulls,\n          valueFormatter: value => value == null ? 'NaN' : value.toString()\n        }],\n        xAxis: [{\n          scaleType: 'point',\n          data: xLabels\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(WorkoutLineChart, \"25T5RqnpHPZx1hYuwXS/vSFcc1w=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n_c = WorkoutLineChart;\nexport default WorkoutLineChart;\nvar _c;\n$RefreshReg$(_c, \"WorkoutLineChart\");","map":{"version":3,"names":["React","LineChart","Box","useMediaQuery","useTheme","Stack","Typography","jsxDEV","_jsxDEV","WorkoutLineChart","workoutData","_s","theme","isMobile","breakpoints","down","connectNulls","NeilHistory","RiaHistory","children","fileName","_jsxFileName","lineNumber","columnNumber","neilData","riaData","neilSeriesData","riaSeriesData","xLabels","processHistory","history","dateMap","forEach","d","date","Date","date_edited","toISOString","split","weight","console","log","Object","keys","sort","a","b","map","x","y","allDates","Set","createSeriesData","data","dates","dataMap","Map","get","error","direction","xs","md","spacing","sx","width","mx","my","textAlign","minWidth","fontSize","fontWeight","exercise","height","series","label","valueFormatter","value","toString","xAxis","scaleType","_c","$RefreshReg$"],"sources":["/Users/neilk/Documents/WebDev/workout-tracker/frontend/src/components/WorkoutLineChart.js"],"sourcesContent":["import React from 'react';\nimport { LineChart } from '@mui/x-charts/LineChart';\nimport { Box, useMediaQuery, useTheme, Stack, Typography } from '@mui/material';\n\nconst WorkoutLineChart = ({ workoutData }) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  // eslint-disable-next-line\n  const connectNulls = true;\n\n  if (!workoutData || !workoutData.NeilHistory || !workoutData.RiaHistory) {\n    return <Box>Click on an exercise to view data</Box>;\n  }\n\n  let neilData = [];\n  let riaData = [];\n  let neilSeriesData = [];\n  let riaSeriesData = [];\n  let xLabels = [];\n\n  const processHistory = (history) => {\n    const dateMap = {};\n    history.forEach(d => {\n      const date = new Date(d.date_edited).toISOString().split('T')[0]; // Ensure consistent date format\n      if (!dateMap[date] & d.weight > dateMap[date]) {\n        dateMap[date] = d.weight;\n      }\n      console.log(dateMap)\n    });\n\n    return Object.keys(dateMap)\n      .sort((a, b) => new Date(a) - new Date(b)) // Sort dates in ascending order\n      .map(date => ({ x: date, y: dateMap[date] }));\n  };\n\n  try {\n    neilData = processHistory(workoutData.NeilHistory);\n    riaData = processHistory(workoutData.RiaHistory);\n\n    const allDates = [\n      ...new Set([\n        ...neilData.map(d => d.x),\n        ...riaData.map(d => d.x)\n      ])\n    ].sort((a, b) => new Date(a) - new Date(b));\n\n    xLabels = allDates;\n\n    // Create series data with null for missing dates\n    const createSeriesData = (data, dates) => {\n      const dataMap = new Map(data.map(d => [d.x, d.y]));\n      return dates.map(date => dataMap.get(date) || null);\n    };\n\n    neilSeriesData = createSeriesData(neilData, xLabels);\n    riaSeriesData = createSeriesData(riaData, xLabels);\n\n    // console.log(\"Neil Data:\", neilSeriesData);\n    // console.log(\"Ria Data:\", riaSeriesData);\n    // console.log(\"workout:\", workoutData);\n  } catch (error) {\n    console.log(error);\n    return <Box>Click on an exercise to view data</Box>;\n  }\n\n  return (\n    <Stack\n      direction={{ xs: 'column', md: 'row' }}\n      spacing={{ xs: 4, md: 8 }}\n      sx={{ width: '100%', mx: 'auto', my: 2 }}\n      textAlign=\"center\"\n    >\n      <Box minWidth={100}>\n        <Typography fontSize={20} fontWeight={700}>{workoutData.exercise}</Typography>\n      </Box>\n      <Box textAlign=\"center\" sx={{ width: '100%', my: 2 }}>\n        <LineChart\n          width={isMobile ? 300 : 500}\n          height={isMobile ? 200 : 300}\n          series={[\n            { data: neilSeriesData, label: 'Neil', connectNulls, valueFormatter: (value) => (value == null ? 'NaN' : value.toString()) },\n            { data: riaSeriesData, label: 'Ria', connectNulls, valueFormatter: (value) => (value == null ? 'NaN' : value.toString()) },\n          ]}\n          xAxis={[{ scaleType: 'point', data: xLabels }]}\n        />\n      </Box>\n    </Stack>\n  );\n};\n\nexport default WorkoutLineChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}